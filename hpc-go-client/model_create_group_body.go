/*
HPC Portal - API

An interface for working with HPC clusters.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hpc

import (
	"encoding/json"
)

// checks if the CreateGroupBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateGroupBody{}

// CreateGroupBody struct for CreateGroupBody
type CreateGroupBody struct {
	GroupName string `json:"group_name"`
}

// NewCreateGroupBody instantiates a new CreateGroupBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateGroupBody(groupName string) *CreateGroupBody {
	this := CreateGroupBody{}
	this.GroupName = groupName
	return &this
}

// NewCreateGroupBodyWithDefaults instantiates a new CreateGroupBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateGroupBodyWithDefaults() *CreateGroupBody {
	this := CreateGroupBody{}
	return &this
}

// GetGroupName returns the GroupName field value
func (o *CreateGroupBody) GetGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value
// and a boolean to check if the value has been set.
func (o *CreateGroupBody) GetGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupName, true
}

// SetGroupName sets field value
func (o *CreateGroupBody) SetGroupName(v string) {
	o.GroupName = v
}

func (o CreateGroupBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateGroupBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["group_name"] = o.GroupName
	return toSerialize, nil
}

type NullableCreateGroupBody struct {
	value *CreateGroupBody
	isSet bool
}

func (v NullableCreateGroupBody) Get() *CreateGroupBody {
	return v.value
}

func (v *NullableCreateGroupBody) Set(val *CreateGroupBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateGroupBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateGroupBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateGroupBody(val *CreateGroupBody) *NullableCreateGroupBody {
	return &NullableCreateGroupBody{value: val, isSet: true}
}

func (v NullableCreateGroupBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateGroupBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


