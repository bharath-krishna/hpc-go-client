/*
HPC Portal - API

Code for logging, authentication with JWT token, e2e tests are added

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hpc

import (
	"encoding/json"
)

// checks if the CreateJobBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateJobBody{}

// CreateJobBody struct for CreateJobBody
type CreateJobBody struct {
	Name string `json:"name"`
	Description string `json:"description"`
	Image string `json:"image"`
	Namespace string `json:"namespace"`
	Gpus string `json:"gpus"`
	Pvc string `json:"pvc"`
	Command string `json:"command"`
	Args string `json:"args"`
	SharedMem string `json:"shared_mem"`
	SharedMemUnit string `json:"shared_mem_unit"`
	Distributed bool `json:"distributed"`
	Interactive bool `json:"interactive"`
}

// NewCreateJobBody instantiates a new CreateJobBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateJobBody(name string, description string, image string, namespace string, gpus string, pvc string, command string, args string, sharedMem string, sharedMemUnit string, distributed bool, interactive bool) *CreateJobBody {
	this := CreateJobBody{}
	this.Name = name
	this.Description = description
	this.Image = image
	this.Namespace = namespace
	this.Gpus = gpus
	this.Pvc = pvc
	this.Command = command
	this.Args = args
	this.SharedMem = sharedMem
	this.SharedMemUnit = sharedMemUnit
	this.Distributed = distributed
	this.Interactive = interactive
	return &this
}

// NewCreateJobBodyWithDefaults instantiates a new CreateJobBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateJobBodyWithDefaults() *CreateJobBody {
	this := CreateJobBody{}
	return &this
}

// GetName returns the Name field value
func (o *CreateJobBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateJobBody) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *CreateJobBody) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateJobBody) SetDescription(v string) {
	o.Description = v
}

// GetImage returns the Image field value
func (o *CreateJobBody) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *CreateJobBody) SetImage(v string) {
	o.Image = v
}

// GetNamespace returns the Namespace field value
func (o *CreateJobBody) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *CreateJobBody) SetNamespace(v string) {
	o.Namespace = v
}

// GetGpus returns the Gpus field value
func (o *CreateJobBody) GetGpus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Gpus
}

// GetGpusOk returns a tuple with the Gpus field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetGpusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Gpus, true
}

// SetGpus sets field value
func (o *CreateJobBody) SetGpus(v string) {
	o.Gpus = v
}

// GetPvc returns the Pvc field value
func (o *CreateJobBody) GetPvc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pvc
}

// GetPvcOk returns a tuple with the Pvc field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetPvcOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pvc, true
}

// SetPvc sets field value
func (o *CreateJobBody) SetPvc(v string) {
	o.Pvc = v
}

// GetCommand returns the Command field value
func (o *CreateJobBody) GetCommand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetCommandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *CreateJobBody) SetCommand(v string) {
	o.Command = v
}

// GetArgs returns the Args field value
func (o *CreateJobBody) GetArgs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Args
}

// GetArgsOk returns a tuple with the Args field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetArgsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Args, true
}

// SetArgs sets field value
func (o *CreateJobBody) SetArgs(v string) {
	o.Args = v
}

// GetSharedMem returns the SharedMem field value
func (o *CreateJobBody) GetSharedMem() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SharedMem
}

// GetSharedMemOk returns a tuple with the SharedMem field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetSharedMemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SharedMem, true
}

// SetSharedMem sets field value
func (o *CreateJobBody) SetSharedMem(v string) {
	o.SharedMem = v
}

// GetSharedMemUnit returns the SharedMemUnit field value
func (o *CreateJobBody) GetSharedMemUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SharedMemUnit
}

// GetSharedMemUnitOk returns a tuple with the SharedMemUnit field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetSharedMemUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SharedMemUnit, true
}

// SetSharedMemUnit sets field value
func (o *CreateJobBody) SetSharedMemUnit(v string) {
	o.SharedMemUnit = v
}

// GetDistributed returns the Distributed field value
func (o *CreateJobBody) GetDistributed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Distributed
}

// GetDistributedOk returns a tuple with the Distributed field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetDistributedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Distributed, true
}

// SetDistributed sets field value
func (o *CreateJobBody) SetDistributed(v bool) {
	o.Distributed = v
}

// GetInteractive returns the Interactive field value
func (o *CreateJobBody) GetInteractive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Interactive
}

// GetInteractiveOk returns a tuple with the Interactive field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetInteractiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interactive, true
}

// SetInteractive sets field value
func (o *CreateJobBody) SetInteractive(v bool) {
	o.Interactive = v
}

func (o CreateJobBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateJobBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["image"] = o.Image
	toSerialize["namespace"] = o.Namespace
	toSerialize["gpus"] = o.Gpus
	toSerialize["pvc"] = o.Pvc
	toSerialize["command"] = o.Command
	toSerialize["args"] = o.Args
	toSerialize["shared_mem"] = o.SharedMem
	toSerialize["shared_mem_unit"] = o.SharedMemUnit
	toSerialize["distributed"] = o.Distributed
	toSerialize["interactive"] = o.Interactive
	return toSerialize, nil
}

type NullableCreateJobBody struct {
	value *CreateJobBody
	isSet bool
}

func (v NullableCreateJobBody) Get() *CreateJobBody {
	return v.value
}

func (v *NullableCreateJobBody) Set(val *CreateJobBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateJobBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateJobBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateJobBody(val *CreateJobBody) *NullableCreateJobBody {
	return &NullableCreateJobBody{value: val, isSet: true}
}

func (v NullableCreateJobBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateJobBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


